AWSTemplateFormatVersion: '2010-09-09'
Description: Description

Parameters:
  ImageId:
    Description: Amazon Linux 2
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs

  InstanceType:
    Type: String
    Default: t3a.small

  TemplatesBucket:
    Description: Specify build-cleaved-pipelines-templats S3 Bucket
    Type: String
    Default: on-aws-us-east-1-master

  HostedZoneId:
    Description: AWS Route53 HostedZone Id
    Type: String

  AzureTenantId:
    Type: String

  ClientId:
    Type: String

  ClientSecret:
    Type: String
    NoEcho: true

Resources:
  # ####################
  # CFN CUSTOM RESOURCES
  # ####################
  ROUTE53:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/custom/route53/template.yaml
      Parameters:
        Tag: fitnesse

  GetHostedZone:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt ROUTE53.Outputs.ServiceToken
      Id: !Ref HostedZoneId

  # ####################
  # Resources
  # ####################
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/vpc/template.yaml
      Parameters:
        Tag: fitnesse
        Mode: NatInstance

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
            Effect: Allow
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        InstanceMarketOptions:
          MarketType: spot
          SpotOptions:
            MaxPrice: 0.2
            SpotInstanceType: persistent
            InstanceInterruptionBehavior: stop
        BlockDeviceMappings:
          - DeviceName: /dev/sda1
            Ebs:
              VolumeSize: 10
              VolumeType: gp3
        UserData:
          Fn::Base64: |
            #cloud-config
            package_update: true
            packages:
              - java-11-amazon-corretto-headless
              - powershell
            runcmd:
            - mkdir /var/lib/fitnesse && cd /var/lib/fitnesse
            - curl 'http://fitnesse.org/fitnesse-standalone.jar?responder=releaseDownload&release=20201213' --output fitnesse-standalone.jar
            - curl 'https://raw.githubusercontent.com/konstantinvlasenko/PowerSlim/master/slim.ps1' --output slim.ps1
            - curl 'https://raw.githubusercontent.com/konstantinvlasenko/PowerSlim/master/client.ps1' --output client.ps1
            - tr -d '\r' < slim.ps1 > slim.ps1 && chmod +x slim.ps1
            - tr -d '\r' < client.ps1 > client.ps1 && chmod +x client.ps1
            - java -jar fitnesse-standalone.jar -p 8080

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Fitnesse instance
      VpcId:  !GetAtt VPC.Outputs.VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Fitnesse
          SourceSecurityGroupId: !Ref LoadbalancerSecurityGroup
      Tags:
        - Key: App
          Value: fitnesse

  Fitnesse:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SubnetId:
        Fn::Select:
          - 0
          - Fn::Split:
            - ','
            - !GetAtt VPC.Outputs.PrivateSubnets
      SecurityGroupIds:
        - !Ref SecurityGroup
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: 1
      Tags:
        - Key: Name
          Value: FITNESSE
        - Key: App
          Value: fitnesse

  ################################################################################
  # AWS Load Balancer
  ################################################################################
  LoadbalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Load balancer
      VpcId: !GetAtt VPC.Outputs.VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Fitnesse
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: IdP token endpoint or the IdP user info endpoint
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: App
          Value: fitnesse

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Subnets:
        Fn::Split:
          - ','
          - !GetAtt VPC.Outputs.PublicSubnets
      SecurityGroups:
        - !Ref LoadbalancerSecurityGroup
      Tags:
        - Key: App
          Value: fitnesse

  DnsRecordAPI:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name:
        Fn::Sub:
          - fitnesse.${Name}
          -
            Name: !GetAtt GetHostedZone.Name
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName

  SslCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Fn::Sub:
          - fitnesse.${Name}
          -
            Name: !GetAtt GetHostedZone.Name
      ValidationMethod: DNS
      Tags:
        - Key: App
          Value: fitnesse

  HttpTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !GetAtt VPC.Outputs.VPC
      Port: 8080
      Protocol: HTTP
      TargetType: instance
      Targets:
        - Id: !Ref Fitnesse
          Port: 8080
      Matcher:
        HttpCode: 200
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        -  CertificateArn: !Ref SslCert
      DefaultActions:
        - Type: authenticate-oidc
          Order: 1
          AuthenticateOidcConfig:
            Issuer: !Sub https://login.microsoftonline.com/${AzureTenantId}/v2.0
            AuthorizationEndpoint: !Sub https://login.microsoftonline.com/${AzureTenantId}/oauth2/v2.0/authorize
            TokenEndpoint: !Sub https://login.microsoftonline.com/${AzureTenantId}/oauth2/v2.0/token
            UserInfoEndpoint: https://graph.microsoft.com/oidc/userinfo
            ClientId: !Ref ClientId
            ClientSecret: !Ref ClientSecret
            SessionTimeout: 86400
        - Type: forward
          Order: 2
          TargetGroupArn: !Ref HttpTargetGroup
