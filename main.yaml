AWSTemplateFormatVersion: '2010-09-09'
Description: Description

Parameters:
  ImageId:
    Description: Amazon Linux 2
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-ebs

  InstanceType:
    Type: String
    Default: t3a.small

  TemplatesBucket:
    Description: Specify ON-AWS S3 Bucket
    Type: String
    Default: on-aws-us-east-1-master

  S3Uri:
    Description: Specify Fitnesse/PowerSlim location
    Type: String
    Default: s3://stackset-bootstrap-4e82861e-b7c5-49bb-8e4d-bucket-fz9yclvd5kpw/PowerSlim/

  HostedZoneId:
    Description: AWS Route53 HostedZone Id
    Type: String

  AzureTenantId:
    Type: String

  ClientId:
    Type: String

  ClientSecret:
    Type: String
    NoEcho: true

  AppsCount:
    Description: Number of Fitnesse severs. Fitnesse server per app/project.
    Default: 1
    Type: Number
    AllowedValues: [ 1, 2, 3 ]

  Apps:
    Type: CommaDelimitedList
    Default: fitnesse

  Owner:
    Type: String

Conditions:
  SecondFinesse:
    Fn::Or:
      - Fn::Equals: [!Ref AppsCount, 2]
      - Fn::Equals: [!Ref AppsCount, 3]
  ThirdFinesse:
    Fn::Equals: [!Ref AppsCount, 3]

Resources:
  # ####################
  # CFN CUSTOM RESOURCES
  # ####################
  ROUTE53:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/custom/route53/template.yaml
      Parameters:
        Tag: fitnesse

  GetHostedZone:
    Type: Custom::CustomResource
    Properties:
      ServiceToken: !GetAtt ROUTE53.Outputs.ServiceToken
      Id: !Ref HostedZoneId

  # ####################
  # Resources
  # ####################
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/vpc/template.yaml
      Parameters:
        Owner: !Ref Owner
        AvailabilityZonesCount: 2

  LoadbalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Load balancer
      VpcId: !GetAtt VPC.Outputs.VPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Fitnesse
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          Description: IdP token endpoint or the IdP user info endpoint
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Owner
          Value: !Ref Owner

  FitnesseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Group for Fitnesse instance
      VpcId:  !GetAtt VPC.Outputs.VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          Description: Fitnesse
          SourceSecurityGroupId: !Ref LoadbalancerSecurityGroup
      Tags:
        - Key: Owner
          Value: !Ref Owner

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Subnets:
        Fn::Split:
          - ','
          - !GetAtt VPC.Outputs.PublicSubnets
      SecurityGroups:
        - !Ref LoadbalancerSecurityGroup
      Tags:
        - Key: Owner
          Value: !Ref Owner

  DnsRecordAPI:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name:
        Fn::Sub:
          - fitnesse.${Name}
          -
            Name: !GetAtt GetHostedZone.Name
      Type: CNAME
      TTL: 300
      ResourceRecords:
        - !GetAtt LoadBalancer.DNSName

  SslCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName:
        Fn::Sub:
          - fitnesse.${Name}
          -
            Name: !GetAtt GetHostedZone.Name
      ValidationMethod: DNS
      Tags:
        - Key: Owner
          Value: !Ref Owner

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        -  CertificateArn: !Ref SslCert
      DefaultActions:
        - Type: authenticate-oidc
          Order: 1
          AuthenticateOidcConfig:
            Issuer: !Sub https://login.microsoftonline.com/${AzureTenantId}/v2.0
            AuthorizationEndpoint: !Sub https://login.microsoftonline.com/${AzureTenantId}/oauth2/v2.0/authorize
            TokenEndpoint: !Sub https://login.microsoftonline.com/${AzureTenantId}/oauth2/v2.0/token
            UserInfoEndpoint: https://graph.microsoft.com/oidc/userinfo
            ClientId: !Ref ClientId
            ClientSecret: !Ref ClientSecret
            SessionTimeout: 86400
        - Type: forward
          Order: 2
          TargetGroupArn: !Ref HttpTargetGroup

  # ####################
  # Fitnesse farm
  # ####################
  Fitnesse1:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/fitnesse/template.yaml
      Parameters:
        S3Uri: !Ref S3Uri
        AzureTenantId: !Ref AzureTenantId
        ClientId: !Ref ClientId
        ClientSecret: !Ref ClientSecret
        App: !Select [0, !Ref Apps]
        Owner: !Ref Owner
        ListenerArn: !Ref LoadBalancerListener
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !Ref FitnesseSecurityGroup


  Fitnesse2:
    Type: AWS::CloudFormation::Stack
    Condition: SecondFinesse
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/fitnesse/template.yaml
      Parameters:
        S3Uri: !Ref S3Uri
        AzureTenantId: !Ref AzureTenantId
        ClientId: !Ref ClientId
        ClientSecret: !Ref ClientSecret
        App: !Select [1, !Ref Apps]
        Owner: !Ref Owner
        ListenerArn: !Ref LoadBalancerListener
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !Ref FitnesseSecurityGroup

  Fitnesse3:
    Type: AWS::CloudFormation::Stack
    Condition: ThirdFinesse
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/fitnesse/template.yaml
      Parameters:
        S3Uri: !Ref S3Uri
        AzureTenantId: !Ref AzureTenantId
        ClientId: !Ref ClientId
        ClientSecret: !Ref ClientSecret
        App: !Select [2, !Ref Apps]
        Owner: !Ref Owner
        ListenerArn: !Ref LoadBalancerListener
        VPC: !GetAtt VPC.Outputs.VPC
        PrivateSubnets: !GetAtt VPC.Outputs.PrivateSubnets
        SecurityGroup: !Ref FitnesseSecurityGroup
